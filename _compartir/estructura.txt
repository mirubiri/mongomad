#Relations
 (hijo) embedded_in :polymorphic_money, polymorphic: true
(padre) embeds_one :money, as: :polymorphic_money
-----------------------------------------------------------------------------------
require 'spec_helper'

describe Money do
  describe 'Relations' do
  end

  describe 'Attributes' do
  end

  describe 'Validations' do
  end

  describe 'Factories' do
  end

  describe '#' do
    xit ''
  end
end
------------------------------------------------------------------------------------
codigo en el test de thing

=begin
#Behaviour
  before (:all) do
    @thing=Fabricate(:thing)
    @product=@thing.to_product
  end

  describe 'Factories' do
    specify { @thing.should be_valid }
  end

  describe '#owner' do
    it 'return the user owner id' do
      @thing.owner.should eq @thing.thing_box.user
    end
  end

  describe '#to_product' do
    describe '=> product' do
#No dan un texto descriptivo
      specify { @product.should be_kind_of(Product) }
      specify { @product.should_not be_persisted }
      specify { @product.name.should eq @thing.name }
      specify { @product.description.should eq @thing.description }
      specify { @product.main_photo.should eq @thing.main_photo }
      specify { @product.thing_id.should eq @thing._id }
      specify { @product.quantity.should be_nil }
      specify { @product.photos.should eq @thing.photos }
    end
  end
=end
-----------------------------------------------------------------------
    it { should validate_presence_of :name }
    it { should validate_length_of(:name).within(2..20) }
    it { should validate_presence_of :surname }
    it { should validate_length_of(:surname).within(2..20) }
    it { should validate_presence_of :nickname }
    it { should validate_uniqueness_of(:nickname) }
    it { should validate_length_of(:nickname).within(2..20) }
    it { should validate_presence_of :password }
    it { should validate_length_of(:password).within(6..20) }
    it { should validate_presence_of :country }
    it { should validate_length_of(:country).within(2..20) }
    it { should validate_presence_of :flag_url }
    it { should validate_length_of(:flag_url).within(2..20) }
    it { should validate_presence_of :email }
    it { should validate_uniqueness_of(:email) }
    it { should validate_confirmation_of(:email) }
    it { should validate_presence_of :birth_date }
    it { should validate_presence_of :registration_date }