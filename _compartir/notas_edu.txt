TAREAS:
- renombrar las secondary images > images en el documento de visio

======================================================================================
NOTAS:

 #,
    #:styles => {
      #:original => ['1920x1680>', :jpg],
      #:small    => ['100x100#',   :jpg],
      #:medium   => ['250x250',    :jpg],
      #:large    => ['500x500>',   :jpg]
    #}
------------------------------------------------------------------------
sintaxis expect nueva:

    it { should have_field(:user_name).of_type(String) }
    it { expect(request).to have_field(:user_name).of_type(String) }

    it { should have_field(:text).of_type(String) }
    it { expect(request).to have_field(:text).of_type(String) }
------------------------------------------------------------------------

Fabricator(:user_thing, class_name: "User::Thing") do
  user            { Fabricate.build(:user, things:nil) }
  images(count:1) { Fabricate.build(:user_thing_image, thing:nil) }
  name            'name'
  description     'description'
  stock           10
  main_image      { |attrs| attrs[:images] &&
                            attrs[:images].last.file.url }
end

Fabricator(:request) do
  user_id   nil
  user_name nil
  text      'el texto de mi peticion que es un poco largo y ocupa mas de una linea'
  image     'image_path'

  after_build do |request|
    user=Fabricate.build(:user)
    request.user_id ||=user._id
    request.user_name ||=user.profile.name
  end
end

Fabricator(:user_thing_image, class_name: "User::Thing::Image") do
  thing { Fabricate.build(:user_thing, secondary_images:nil) }
  file  { File.open('app/assets/images/rails.png') }

  after_build do |image|
    image.thing &&
    image.thing.main_image = image.thing.images.last.file.url
  end
end

======================================================================================
